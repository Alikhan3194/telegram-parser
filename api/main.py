from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from api.routers import telemetr
from api.logging_conf import setup_api_logging, LoggingMiddleware

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_api_logging()

app = FastAPI(
    title="Telemetr Parser API",
    description="API –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Telegram –∫–∞–Ω–∞–ª–æ–≤ —Å —Å–∞–π—Ç–∞ telemetr.me",
    version="1.0.0"
)

# –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
app.add_middleware(LoggingMiddleware)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "https://6d3ff40450cc.ngrok-free.app",
    "hhttps://77575e4d233f.ngrok-free.app",
    ],
    allow_methods=["GET", "POST", "PUT", "OPTIONS"],
    allow_headers=["*"],
    allow_credentials=True,
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(telemetr.router, prefix="/api")

@app.get("/")
def root():
    logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É")
    return {
        "message": "Telemetr Parser API is running",
        "version": "1.0.0",
        "docs": "/docs"
    }

@app.on_event("startup")
async def startup_event():
    logger.info("üöÄ Telemetr Parser API –∑–∞–ø—É—â–µ–Ω")
    logger.info("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    logger.info("   PUT  /api/filters - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
    logger.info("   POST /api/start - –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞")
    logger.info("   GET  /api/status - —Å—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞")
    logger.info("   GET  /api/download/{kind} - —Å–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")

@app.on_event("shutdown")
async def shutdown_event():
    logger.info("üõë Telemetr Parser API –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
